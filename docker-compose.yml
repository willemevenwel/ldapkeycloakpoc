version: '3.8'
services:
  ldap:
    image: quay.io/minio/openldap:latest
    container_name: ldap
    environment:
      - LDAP_ORGANISATION=My Company
      - LDAP_DOMAIN=min.io
      - LDAP_BASE_DN=dc=min,dc=io
      - LDAP_ADMIN_PASSWORD=admin
      # Windows-specific optimizations
      - LDAP_OPENLDAP_GID=999
      - LDAP_OPENLDAP_UID=999
    ports:
      - "389:389"
      - "636:636"
    volumes:
      - ldap_data:/var/lib/ldap
      - ldap_config:/etc/ldap/slapd.d
      - ./ldif:/opt/ldif
    # Health check for better container management
    healthcheck:
      test: ["CMD-SHELL", "ldapsearch -x -H ldap://localhost:389 -b '' -s base || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  ldap-manager:
    build: ./ldap-user-manager
    image: my-ldap-user-manager:latest
    container_name: ldap-manager
    environment:
      - LDAP_URI=ldap://ldap:389
      - LDAP_BASE_DN=dc=min,dc=io
      - LDAP_USER_OU=users
      - LDAP_GROUP_OU=groups
      - LDAP_REQUIRE_STARTTLS=FALSE
      - LDAP_ADMINS_GROUP=admins
      - LDAP_ADMIN_BIND_DN=cn=admin,dc=min,dc=io
      - LDAP_ADMIN_BIND_PWD=admin
      - NO_HTTPS=true
      - ENFORCE_SAFE_SYSTEM_NAMES=FALSE
    ports:
      - "8080:80"
    depends_on:
      - ldap

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    command: start-dev --features=organization
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      # Cross-platform JVM optimizations
      - JAVA_OPTS=-Xmx512m -Xms256m
    ports:
      - "8090:8080"
    # Health check for better container management
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Python utilities container for cross-platform script execution
  utils:
    build: ./python-bastion
    image: python-bastion:latest
    container_name: python-bastion
    working_dir: /workspace
    volumes:
      - .:/workspace
      - ./data:/opt/import
      - ./ldif:/opt/output
      - /var/run/docker.sock:/var/run/docker.sock  # Enable Docker API access from container
    environment:
      - PYTHONPATH=/workspace
      - PYTHONUNBUFFERED=1
    command: tail -f /dev/null  # Keep container running
    depends_on:
      - ldap
      - keycloak
    networks:
      - default

  # Weave Scope - Network visualization and container monitoring
  weavescope:
    image: weaveworks/scope:latest
    container_name: weave-scope
    ports:
      - "4040:4040"
    command: --probe.docker=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - ldap
      - keycloak
      - ldap-manager
    networks:
      - default
    restart: unless-stopped
    privileged: true

  # Dashboard - Lightweight static HTML dashboard with service links
  dashboard:
    image: nginx:alpine
    container_name: poc-dashboard
    ports:
      - "8888:80"
    volumes:
      - ./dashboard:/usr/share/nginx/html:ro
    depends_on:
      - ldap
      - keycloak
      - ldap-manager
      - weavescope
      - mock-oauth2
    networks:
      - default
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Mock OAuth2 Server - For testing OAuth flows and external integrations
  mock-oauth2:
    image: ghcr.io/navikt/mock-oauth2-server:0.5.0
    container_name: mock-oauth2-server
    ports:
      - "8081:8080"
    environment:
      - SERVER_PORT=8080
      - LOG_LEVEL=INFO
    networks:
      - default
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/default/.well-known/openid_configuration || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  ldap_data:
  ldap_config:
